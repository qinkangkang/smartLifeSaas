<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.warehouses.dao.WarehouseDao">
    
	<sql id="warehouseColumns">
		a.id AS "id",
		a.fname AS "fname",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.fstatus AS "fstatus",
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.charge_person AS "chargePerson.id",
		c.name AS "company.name",
    	c.parent_id AS "company.parent.id",
    	c.parent_ids AS "company.parentIds",
		o.name AS "office.name",
    	o.parent_id AS "office.parent.id",
    	o.parent_ids AS "office.parentIds",
    	cp.name AS "chargePerson.name"
	</sql>
	
	<sql id="warehouseJoins">
		LEFT JOIN  sys_office c ON c.id = a.company_id
		LEFT JOIN  sys_office o ON o.id = a.office_id
		LEFT JOIN sys_user cp ON cp.id = a.charge_person
		LEFT JOIN sys_user createby ON createby.id = a.create_by
	</sql>
	
    
	<select id="get" resultType="Warehouse" >
		SELECT 
			<include refid="warehouseColumns"/>
		FROM warehouse a
		<include refid="warehouseJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Warehouse" >
		SELECT 
			<include refid="warehouseColumns"/>
		FROM warehouse a
		<include refid="warehouseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="fname != null and fname != ''">
				AND a.fname LIKE 
					<if test="dbName == 'oracle'">'%'||#{fname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{fname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{fname},'%')</if>
			</if>
			<if test="company != null and company.id != null and company.id != ''">
				AND (c.id = #{company.id} OR c.parent_ids LIKE 
						<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
						<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
			</if>
			<if test="office != null and office.id != null and office.id != ''">
				AND (o.id = #{office.id} OR o.parent_ids LIKE 
						<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
						<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
			</if>
			<if test="fstatus != null and fstatus != ''">
				AND a.fstatus = #{fstatus}
			</if>
				<!-- 数据范围过滤 -->
				${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Warehouse" >
		SELECT 
			<include refid="warehouseColumns"/>
		FROM warehouse a
		<include refid="warehouseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO warehouse(
			id,
			fname,
			create_by,
			update_by,
			create_date,
			update_date,
			remarks,
			del_flag,
			fstatus,
			company_id,
			office_id,
			charge_person
		) VALUES (
			#{id},
			#{fname},
			#{createBy.id},
			#{updateBy.id},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{fstatus},
			#{company.id},
			#{office.id},
			#{chargePerson.id}
		)
	</insert>
	
	<update id="update">
		UPDATE warehouse SET 	
			fname = #{fname},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			fstatus = #{fstatus},
			company_id = #{company.id},
			office_id = #{office.id},
			charge_person = #{chargePerson.id}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM warehouse
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE warehouse SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Warehouse" statementType="STATEMENT">
		select * FROM warehouse  where ${propertyName} = '${value}'
	</select>
	
</mapper>