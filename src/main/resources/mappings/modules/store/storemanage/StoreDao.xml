<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.store.dao.storemanage.StoreDao">
    
	<sql id="storeColumns">
		a.id AS "id",
		a.fname AS "fname",
		a.faddress AS "faddress",
		a.fphone AS "fphone",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.fstatus AS "fstatus"
	</sql>
	
	<sql id="storeJoins">
	</sql>
	
    
	<select id="get" resultType="Store" >
		SELECT 
			<include refid="storeColumns"/>
		FROM s_store a
		<include refid="storeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Store" >
		SELECT 
			<include refid="storeColumns"/>
		FROM s_store a
		<include refid="storeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="fname != null and fname != ''">
				AND a.fname = #{fname}
			</if>
			<if test="fstatus != null and fstatus != ''">
				AND a.fstatus = #{fstatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Store" >
		SELECT 
			<include refid="storeColumns"/>
		FROM s_store a
		<include refid="storeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO s_store(
			id,
			fname,
			faddress,
			fphone,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			fstatus
		) VALUES (
			#{id},
			#{fname},
			#{faddress},
			#{fphone},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{fstatus}
		)
	</insert>
	
	<update id="update">
		UPDATE s_store SET 	
			fname = #{fname},
			faddress = #{faddress},
			fphone = #{fphone},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			fstatus = #{fstatus}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM s_store
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE s_store SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Store" statementType="STATEMENT">
		select * FROM s_store  where ${propertyName} = '${value}'
	</select>
	
</mapper>